.\" Copyright (C) 2006 - 2015 jre <jre-phoenix@users.sourceforge.net>
.\" Copyright (C) 2006 - 2009 sloter <laurent at sloter.org>
.\"
.\"   This file is part of pgl.
.\"
.\"   pgl is free software: you can redistribute it and/or modify
.\"   it under the terms of the GNU General Public License as published by
.\"   the Free Software Foundation, either version 3 of the License, or
.\"   (at your option) any later version.
.\"
.\"   pgl is distributed in the hope that it will be useful,
.\"   but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"   GNU General Public License for more details.
.\"
.\"   You should have received a copy of the GNU General Public License
.\"   along with pgl.  If not, see <http://www.gnu.org/licenses/>.
.TH PGL 1 "2010-01-07" "Version 2.0" "pgl Manual"

.SH NAME
\fBpgl\fR \- an IP blocker for Linux.

.SH SYNOPSIS
.B pgld
[\fI\-s\fR] [\fI\-l LOGFILE\fR] [\fI\-d\fR] [\fI\-c CHARSET\fR] [\fI\-p
PIDFILE\fR] [\fI\-q 0-65535\fR] \fI\-r MARK\fR \fI\-a MARK\fR BLOCKLIST(S)
.PP
.B pgld
[\fI\-c CHARSET\fR] \-m [\fIBLOCKLIST(S)\fR]
.PP
.B pglcmd
OPTION
.PP
.B pglcmd
search PATTERN
.PP
.B pglgui

.SH DESCRIPTION
.B pgld
checks internet traffic based on large lists of IP address ranges in order to
protect your privacy.
.PP
.B pglcmd
is designed to do all tasks related to pgl:
.IP \(em 3
Start and stop pgl. Or let either SysV init or systemd do this for you.
.IP \(em 3
Update your blocklists from online sources. Or let cron do this automatically.
Backups will be used if a problem occurs. Additionally you may use your local
blocklists.
.IP \(em 3
Examine your selected blocklists by searching the single blocklists for
keywords.
.IP \(em 3
Remove lines by keyword from the blocklists.
.IP \(em 3
Handle your iptables rules: use a default setup, easily allow all traffic on
specific ports and use an allow list, or add your own sophisticated iptables
rules.
.IP \(em 3
Allow all LAN traffic and the DNS server automatically. If you are on a public
LAN, you probably want to disable this feature.
.IP \(em 3
Check the status and test pgl.
.IP \(em 3
A watchdog monitors pgl.
.IP \(em 3
Detects if kernel modules are needed and loads them if necessary.
.IP \(em 3
Set verbosity and logging options.
.IP \(em 3
Daily rotation of the logfiles.

.SH OPTIONS pgld
.TP
.B \-d
Enable D-Bus support.
.TP
.B \-s
Enable logging to syslog and/or systemd journal.
.TP
.B \-l LOGFILE
Enable logging to LOGFILE.
.TP
.B \-c CHARSET
Specify blocklist file CHARSET.
.TP
.B \-p PIDFILE
Use a PIDFILE.
.TP
.B \-a MARK
Place a 32-bit MARK on accepted packets (packet in not in blocklist).
.TP
.B \-r MARK
Place a 32-bit MARK on rejected packets (packet in in blocklist).
.TP
.B \-q 0-65535
Specify a 16-bit NFQUEUE number. Must match \-\-queue-num used in iptables
rules.
.TP
.B \-m [BLOCKLIST(S)]
Load, sort, merge, and dump blocklist(s) specified or piped from stdin.
.TP
.B BLOCKLIST
BLOCKLIST may be in p2p, p2b, ipfilter.dat or lowmem format. pgld has builtin
support for gz packed lists, if it was compiled with zlib support. pglcmd
unpacks gz, zip and 7z lists for pgld.
.PP

.SH OPTIONS pglcmd
.TP
.B start
inserts iptables rules, starts pgld and the watchdog. If the blocklist
configuration changed, rebuilds the master blocklist.
.TP
.B stop
deletes iptables rules and stops pgld.
.TP
.B start_wd
starts the watchdog. DonÂ´t start pglcmd.wd directly. Remember that per
default the watchdog gets started automatically on start. The watchdog checks in
regular intervals (per default 5 minutes) if some of the necessary iptables
rules exist and if the daemon is responsive. If one of these tests fails, it
restarts pgl. This is especially useful, if you have other firewall applications
running, because they often mess up the iptables rules, which can be fixed by
restarting pgl. Unfortunately this manual action is often forgotten.
.TP
.B stop_wd
stops the watchdog.
.TP
.B restart
restarts pgl.
.TP
.B reload
rebuilds the master blocklist if necessary and reloads pgld if it is running.
.TP
.B update
updates the blocklists, rebuilds the master blocklist and reloads pgld if it is
running.
.TP
.B force-restart
like restart, but forces to rebuild blocklist
.TP
.B force-reload
like reload, but forces to rebuild blocklist
.TP
.B force-update
like update, but forces to download blocklists again
.TP
.B status
gives the iptables settings and the status of pgld and the watchdog.
.TP
.B test
does a simple test to check if pgl is working (pings a random IP from the
blocklist, checks if this IP was logged in the logfile, and if the IP answered).
.TP
.B search
Outputs the occurrences of a keyword and the names of the single blocklists.
.TP
.B stats
reports MoBlock's statistics.
.TP
.B reset_stats
resets MoBlock's statistics.
.TP
.B show_config
shows the current configuration settings.
.PP
Note for blocklist operations: When the master blocklist is built, missing
single blocklists are downloaded. If any blocklist fails to download, and if
there is no old version available, the operation aborts. If a downloaded
blocklist fails to extract, it is deleted and the operation aborts.

.SH SIGNALS pgld
.TP
.B USR1
Dump and reset stats.
.TP
.B USR2
Just dump stats.
.TP
.B HUP
Reopen the logfile and reload the blocklist.
.TP
.B TERM
.TP
.B INT
.PP

.SH CONFIGURATION pglcmd
.P
Remote blocklists are configured in \fIBLOCKLISTS_LIST\fR
(/etc/pgl/blocklists.list). Local blocklists are placed in
\fILOCAL_BLOCKLIST_DIR\fR (/etc/pgl/blocklists.local/).
.P
The allow list is \fIallow.p2p\fR (/etc/pgl/allow.p2p). Per default,
the allowlist is used for incoming and outgoing connections. If desired
different allow lists for incoming, outgoing and forward connections may be
used.
.P
The rest is done in \fIpglcmd.conf\fR
(/etc/pgl/pglcmd.conf). Refer to pglcmd.defaults
(/usr/lib/pgl/pglcmd.defaults) for the complete set of possible
configuration variables with comments.

.SH RETURN VALUES pglcmd
\fIpglcmd status\fR gives you the following return values:
.IP
.B 0
pgld is running
.br
.B 1
pgld is dead and pidfile exists
.br
.B 3
pgld is not running
.br
.B 4
pgld is unknown
.PP
\fIpglcmd test\fR gives you the following return values:
.IP
.B 0
test succeeded
.br
.B 1
test failed
.br
.B 2
not testable
.PP

.SH EXIT STATUS pglcmd
.IP
.B 2
pgl was started with bad arguments
.br
.B 4
User is not root
.br
.B 5
pgld is not installed
.br
.B 6
pglcmd is not configured correctly
.br
.B 7
File is missing/has wrong mode
.br
.B 8
iptables command failed
.br
.B 9
blocklist is not available or blocklist archive is corrupted
.br
.B 66
Directory is missing
.br
.B 170
External binary or function is missing
.br
.B 171
Testhost (serving the default blocklists) is not reachable

.SH NOTES
.PP
By default pgl will be started at every system boot up and the blocklists will
be updated once a day.

.SH TECHNICAL NOTE
.PP
pgld checks traffic (packets) that is sent to the iptables NFQUEUE target. If
the necessary netfilter support is not built in the kernel directly, pglcmd will
load the necessary kernel modules. If they are not available, pgld can not be
started.
.PP
If a packet matches the blocklist, then pgld MARKs the packet. Blocked packets
get the MARK "10", which is shown as "0xa" by iptables.
.PP
If a packet doesn't match the blocklist, then pgld MARKs the packet. Allowed
packets get the MARK "20", which is shown as "0x14" by iptables.
.PP
A MARKed packet repeats the hook function (NF_REPEAT). So it is sent back to
the head of the iptables chain again. This means it enters the chain INPUT,
OUTPUT or FORWARD again, but this time bearing a MARK. Then further iptables
rules that match the MARK decide what happens with the packets.
.PP
Per default pglcmd sets iptables rules to REJECT outgoing packets, and to DROP
incoming and forwarded packets, if they were "marked block". If they were
"marked allow", pglcmd's iptables setup just ignores them, so other iptables
rules decide what happens to them.
.PP
It is strongly recommended to use the MARKing feature, because this allows one
to integrate pgl with other firewalls.
.PP
A packet may only bear one MARK, so there mustn't be any other applications or
iptables rules that MARK packets. Otherwise the setup will not work and the
packet will loop forever.
.PP

.SH WARNING: Users with firewall (iptables rules)
\fBpgl\fR does not conflict with other firewalls (iptables rules) as long as you
make sure the following two conditions hold:
.IP \(em 3
Other firewalls must not MARK packets.
.IP \(em 3
pgl is started after other firewalls. If other firewalls are started or reloaded
after pgl, then you may need to restart pglcmd again. You will be fine, if the
iptables rules which send traffic to the iptables chains (pgl_in, pgl_out and
pgl_fwd) stand before all other iptables rules which ACCEPT traffic.
.IP
To help you achieve this, pglcmd.wd restarts pgl if it detects any problems. But
it's still recommended to restart pgl manually, whenever another application
changed the iptables setup.

.SH TESTING
.PP
See \fIpglcmd test\fR and \fIpglcmd status\fR.
.PP
Or make a traceroute to an IP in the blocklist. If \fBpgl\fR is working all
packets will be dropped at the first hop (your PC), resulting in this output:
.IP
`1 * * *`.
.PP

.SH FILES pgld
.IP /usr/sbin/pgld
The \fBpgl\fR daemon.
.IP /etc/logrotate.d/pgld
Rotates the logfile daily.
.IP /var/log/pgl/pgld.log
The log file of \fBpgld\fR. This file contains amongst other the blocked IPs,
the number of loaded ranges and if the daemon could bind to NFQUEUE.
.IP /var/run/pgld.pid
The pid file of \fBpgld\fR.

.SH FILES and DIRECTORIES pglcmd
.IP /usr/bin/pglcmd
The shell script \fBpglcmd\fR.
.IP /usr/lib/pgl/pglcmd.main
The core of all executable scripts.
.IP /usr/lib/pgl/pglcmd.defaults
Default settings for all variables and pathnames.
.IP /usr/lib/pgl/pglcmd.lib
Library for pglcmd.main.
.IP /etc/pgl/blocklists.list
Lists all blocklists that are used (and downloaded) by \fBpglcmd\fR for use by
pgld.
.IP /etc/pgl/blocklists.local/
Local blocklists are placed here.
.IP /etc/pgl/pglcmd.conf
The user configuration file for \fBpglcmd\fR.
.IP /etc/pgl/allow.p2p
The allow list in the peerguardian .p2p text format.
.IP /etc/NetworkManager/dispatcher.d/20pglcmd
.IP /etc/network/if-up.d/pglcmd
Gets executed whenever a network interface is brought up to make sure that the
automatic whitelisting of LAN traffic and the DNS server does work.
.IP /etc/pgl/[NAME]insert.sh
Script to insert custom iptables rules. Any script in /etc/pgl/ (the
directory is defined in IPTABLES_CUSTOM_DIR) that ends in insert.sh will be
executed on every "pglcmd start", if IPTABLES_SETTINGS="1" or "2" is
configured.
.IP /etc/pgl/[NAME]remove.sh
Script to delete custom iptables rules. Any script in /etc/pgl/ (the
directory is defined in IPTABLES_CUSTOM_DIR) that ends in remove.sh will be
executed on every "pglcmd stop", if IPTABLES_SETTINGS="1" or "2" is
configured.
.IP /etc/init.d/pgl
.IP /usr/lib/systemd/system/pgl.service
SysV init or systemd file, starts pgl automatically on every bootup.
.IP /etc/cron.daily/pglcmd
Updates the blocklists automatically.
.IP /etc/logrotate.d/pglcmd
Rotates the logfiles daily.
.IP /var/lib/pgl/pglcmd_blocklist.p2p
The master blocklist used by pgld, premerged from the single local and remote
blocklists.
.IP /var/log/pgl/pglcmd.log
The log file of the \fBpglcmd\fR script. This file contains amongst other things
about starting/stopping pgl and updating the blocklists.
.IP /var/spool/pgl
The single blocklists are downloaded and manipulated in subfolders of this
folder.

.SH HOMEPAGE
.PP
PeerGuardian Linux - \fIhttp://sourceforge.net/projects/peerguardian/\fR

.SH AUTHORS
.PP
Please see AUTHORS.

.SH SEE ALSO
.BR "/usr/share/doc/pglcmd/README.blocklists" ", "
.BR "iptables" "(8)"
